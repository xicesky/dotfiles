#!/bin/bash

export GIT_SSH='C:\Program Files\TortoiseSVN\bin\TortoisePlink.exe'

echo "==============================================================================="
echo "Git Bash ~/.bashrc"
echo ""

################################################################################
# Fix the path (cygwin needs to go)

NEWPATH=""
SAVEIFS="$IFS"
IFS=:
for P in $PATH; do
    #echo "$P"
    case "$P" in
        *cygwin*|*/PHP*)
            echo "Excluding path element: $P"
            ;;
        *)
            NEWPATH="$NEWPATH:$P"
            ;;
    esac
done
IFS="$SAVEIFS"
PATH="$NEWPATH"

################################################################################
# Utility function to create symlinks

# We still need this.
windows() { [[ -n "$WINDIR" ]]; }

# Cross-platform symlink function. With one parameter, it will check
# whether the parameter is a symlink. With two parameters, it will create
# a symlink to a file or directory, with syntax: link $linkname $target
portable_link() {
    if [[ -z "$2" ]]; then
        # Link-checking mode.
        if windows; then
            fsutil reparsepoint query "$1" > /dev/null
        else
            [[ -h "$1" ]]
        fi
    else
        # Link-creation mode.
        if windows; then
            # Windows needs to be told if it's a directory or not. Infer that.
            # Also: note that we convert `/` to `\`. In this case it's necessary.
            if [[ -d "$2" ]]; then
                cmd <<< "mklink /D \"$1\" \"${2//\//\\}\"" > /dev/null
            else
                cmd <<< "mklink \"$1\" \"${2//\//\\}\"" > /dev/null
            fi
        else
            # You know what? I think ln's parameters are backwards.
            ln -s "$2" "$1"
        fi
    fi
}

################################################################################
# Utility functions

sublime() {
    "/c/Program Files/Sublime Text 3/sublime_text.exe" "$@"
}

echo "==============================================================================="
#echo "Bashrc          : `basename "$0"`"
echo "Bashrc          : $BASH_SOURCE"
echo "Path            : $PATH"
